(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[42085],{22280:(e,t,o)=>{var n={"./time-picker.json":89711};function i(e){return o(r(e))}function r(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=r,e.exports=i,i.id=22280},89711:e=>{"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"ampm":{"description":"12h/24h view for hour selection clock."},"ampmInClock":{"description":"Display ampm controls under the clock (instead of in the toolbar)."},"autoFocus":{"description":"If <code>true</code>, the main element is focused during the first mount. This main element is: - the element chosen by the visible view if any (i.e: the selected day on the <code>day</code> view). - the <code>input</code> element if there is a field rendered."},"closeOnSelect":{"description":"If <code>true</code>, the Picker will close after submitting the full date."},"defaultValue":{"description":"The default value. Used when the component is not controlled."},"desktopModeMediaQuery":{"description":"CSS media query when <code>Mobile</code> mode will be changed to <code>Desktop</code>."},"disabled":{"description":"If <code>true</code>, the component is disabled. When disabled, the value cannot be changed and no interaction is possible."},"disableFuture":{"description":"If <code>true</code>, disable values after the current date for date components, time for time components and both for date time components."},"disableIgnoringDatePartForTimeValidation":{"description":"Do not ignore date part when validating min/max time."},"disableOpenPicker":{"description":"If <code>true</code>, the button to open the Picker will not be rendered (it will only render the field)."},"disablePast":{"description":"If <code>true</code>, disable values before the current date for date components, time for time components and both for date time components."},"format":{"description":"Format of the date when rendered in the input(s). Defaults to localized format based on the used <code>views</code>."},"formatDensity":{"description":"Density of the format when rendered in the input. Setting <code>formatDensity</code> to <code>&quot;spacious&quot;</code> will add a space before and after each <code>/</code>, <code>-</code> and <code>.</code> character."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"label":{"description":"The label content."},"localeText":{"description":"Locale for components texts. Allows overriding texts coming from <code>LocalizationProvider</code> and <code>theme</code>."},"maxTime":{"description":"Maximal selectable time. The date part of the object will be ignored unless <code>props.disableIgnoringDatePartForTimeValidation === true</code>."},"minTime":{"description":"Minimal selectable time. The date part of the object will be ignored unless <code>props.disableIgnoringDatePartForTimeValidation === true</code>."},"minutesStep":{"description":"Step over minutes."},"name":{"description":"Name attribute used by the <code>input</code> element in the Field."},"onAccept":{"description":"Callback fired when the value is accepted.","typeDescriptions":{"value":{"name":"value","description":"The value that was just accepted.","argType":"TValue","argTypeDescription":"The value type. It will be the same type as <code>value</code> or <code>null</code>. It can be in <code>[start, end]</code> format in case of range value."},"context":{"name":"context","description":"The context containing the validation result of the current value."}}},"onChange":{"description":"Callback fired when the value changes.","typeDescriptions":{"value":{"name":"value","description":"The new value.","argType":"TValue","argTypeDescription":"The value type. It will be the same type as <code>value</code> or <code>null</code>. It can be in <code>[start, end]</code> format in case of range value."},"context":{"name":"context","description":"The context containing the validation result of the current value."}}},"onClose":{"description":"Callback fired when the popup requests to be closed. Use in controlled mode (see <code>open</code>)."},"onError":{"description":"Callback fired when the error associated with the current value changes. When a validation error is detected, the <code>error</code> parameter contains a non-null value. This can be used to render an appropriate form error.","typeDescriptions":{"error":{"name":"error","description":"The reason why the current value is not valid.","argType":"TError","argTypeDescription":"The validation error type. It will be either <code>string</code> or a <code>null</code>. It can be in <code>[start, end]</code> format in case of range value."},"value":{"name":"value","description":"The value associated with the error.","argType":"TValue","argTypeDescription":"The value type. It will be the same type as <code>value</code> or <code>null</code>. It can be in <code>[start, end]</code> format in case of range value."}}},"onOpen":{"description":"Callback fired when the popup requests to be opened. Use in controlled mode (see <code>open</code>)."},"onSelectedSectionsChange":{"description":"Callback fired when the selected sections change.","typeDescriptions":{"newValue":{"name":"newValue","description":"The new selected sections."}}},"onViewChange":{"description":"Callback fired on view change.","typeDescriptions":{"view":{"name":"view","description":"The new view.","argType":"TView","argTypeDescription":"Type of the view. It will vary based on the Picker type and the <code>views</code> it uses."}}},"open":{"description":"Control the popup or dialog open state."},"openTo":{"description":"The default visible view. Used when the component view is not controlled. Must be a valid option from <code>views</code> list."},"orientation":{"description":"Force rendering in particular orientation."},"readOnly":{"description":"If <code>true</code>, the component is read-only. When read-only, the value cannot be changed but the user can interact with the interface."},"reduceAnimations":{"description":"If <code>true</code>, disable heavy animations."},"referenceDate":{"description":"The date used to generate the new value when both <code>value</code> and <code>defaultValue</code> are empty."},"selectedSections":{"description":"The currently selected sections. This prop accepts four formats: 1. If a number is provided, the section at this index will be selected. 2. If a string of type <code>FieldSectionType</code> is provided, the first section with that name will be selected. 3. If <code>&quot;all&quot;</code> is provided, all the sections will be selected. 4. If <code>null</code> is provided, no section will be selected. If not provided, the selected sections will be handled internally."},"shouldDisableTime":{"description":"Disable specific time.","typeDescriptions":{"value":{"name":"value","description":"The value to check."},"view":{"name":"view","description":"The clock type of the timeValue."},"boolean":{"name":"boolean","description":"If <code>true</code> the time will be disabled."}}},"skipDisabled":{"description":"If <code>true</code>, disabled digital clock items will not be rendered."},"slotProps":{"description":"The props used for each component slot."},"slots":{"description":"Overridable component slots."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"thresholdToRenderTimeInASingleColumn":{"description":"Amount of time options below or at which the single column time renderer is used."},"timeSteps":{"description":"The time steps between two time unit options. For example, if <code>timeSteps.minutes = 8</code>, then the available minute options will be <code>[0, 8, 16, 24, 32, 40, 48, 56]</code>. When single column time renderer is used, only <code>timeSteps.minutes</code> will be used."},"timezone":{"description":"Choose which timezone to use for the value. Example: &quot;default&quot;, &quot;system&quot;, &quot;UTC&quot;, &quot;America/New_York&quot;. If you pass values from other timezones to some props, they will be converted to this timezone before being used.","seeMoreText":"See the {{link}} for more details."},"value":{"description":"The selected value. Used when the component is controlled."},"view":{"description":"The visible view. Used when the component view is controlled. Must be a valid option from <code>views</code> list."},"viewRenderers":{"description":"Define custom view renderers for each section. If <code>null</code>, the section will only have field editing. If <code>undefined</code>, internally defined view will be used."},"views":{"description":"Available views."}},"classDescriptions":{},"slotDescriptions":{"actionBar":"Custom component for the action bar, it is placed below the Picker views.","clearButton":"Button to clear the value.","clearIcon":"Icon to display in the button used to clean the value.","desktopPaper":"Custom component for the paper rendered inside the desktop picker&#39;s Popper.","desktopTransition":"Custom component for the desktop popper <a href=\\"https://mui.com/material-ui/transitions/\\">Transition</a>.","desktopTrapFocus":"Custom component for trapping the focus inside the views on desktop.","dialog":"Custom component for the dialog inside which the views are rendered on mobile.","digitalClockItem":"Component responsible for rendering a single digital clock item.","digitalClockSectionItem":"Component responsible for rendering a single multi section digital clock section item.","field":"Component used to enter the date with the keyboard.","inputAdornment":"Component displayed on the start or end input adornment used to open the Picker.","layout":"Custom component for wrapping the layout. It wraps the toolbar, views, action bar, and shortcuts.","leftArrowIcon":"Icon displayed in the left view switch button.","mobilePaper":"Custom component for the paper rendered inside the mobile picker&#39;s Dialog.","mobileTransition":"Custom component for the mobile dialog <a href=\\"https://mui.com/material-ui/transitions/\\">Transition</a>.","nextIconButton":"Button allowing to switch to the right view.","openPickerButton":"Button to open the Picker.","openPickerIcon":"Icon to display in the button used to open the Picker.","popper":"Custom component for the popper inside which the views are rendered on desktop.","previousIconButton":"Button allowing to switch to the left view.","rightArrowIcon":"Icon displayed in the right view switch button.","shortcuts":"Custom component for the shortcuts.","textField":"Form control with an input to render the value.","toolbar":"Custom component for the toolbar rendered above the views."}}')},94976:(e,t,o)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/x/api/date-pickers/time-picker",function(){return o(99017)}])},99017:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>s}),o(3379);var n=o(37018),i=o(3753);let r=JSON.parse('{"props":{"ampm":{"type":{"name":"bool"},"default":"adapter.is12HourCycleInCurrentLocale()"},"ampmInClock":{"type":{"name":"bool"},"default":"true on desktop, false on mobile"},"autoFocus":{"type":{"name":"bool"}},"closeOnSelect":{"type":{"name":"bool"},"default":"false"},"defaultValue":{"type":{"name":"object"}},"desktopModeMediaQuery":{"type":{"name":"string"},"default":"\'@media (pointer: fine)\'"},"disabled":{"type":{"name":"bool"},"default":"false"},"disableFuture":{"type":{"name":"bool"},"default":"false"},"disableIgnoringDatePartForTimeValidation":{"type":{"name":"bool"},"default":"false"},"disableOpenPicker":{"type":{"name":"bool"},"default":"false","deprecated":true,"deprecationInfo":"Use the <a href=\\"https://mui.com/x/react-date-pickers/fields/\\">field component</a> instead."},"disablePast":{"type":{"name":"bool"},"default":"false"},"format":{"type":{"name":"string"}},"formatDensity":{"type":{"name":"enum","description":"\'dense\'<br>&#124;&nbsp;\'spacious\'"},"default":"\\"dense\\""},"inputRef":{"type":{"name":"custom","description":"ref"}},"label":{"type":{"name":"node"}},"localeText":{"type":{"name":"object"}},"maxTime":{"type":{"name":"object"}},"minTime":{"type":{"name":"object"}},"minutesStep":{"type":{"name":"number"},"default":"1"},"name":{"type":{"name":"string"}},"onAccept":{"type":{"name":"func"},"signature":{"type":"function(value: TValue, context: FieldChangeHandlerContext<TError>) => void","describedArgs":["value","context"]}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(value: TValue, context: FieldChangeHandlerContext<TError>) => void","describedArgs":["value","context"]}},"onClose":{"type":{"name":"func"}},"onError":{"type":{"name":"func"},"signature":{"type":"function(error: TError, value: TValue) => void","describedArgs":["error","value"]}},"onOpen":{"type":{"name":"func"}},"onSelectedSectionsChange":{"type":{"name":"func"},"signature":{"type":"function(newValue: FieldSelectedSections) => void","describedArgs":["newValue"]}},"onViewChange":{"type":{"name":"func"},"signature":{"type":"function(view: TView) => void","describedArgs":["view"]}},"open":{"type":{"name":"bool"},"default":"false"},"openTo":{"type":{"name":"enum","description":"\'hours\'<br>&#124;&nbsp;\'meridiem\'<br>&#124;&nbsp;\'minutes\'<br>&#124;&nbsp;\'seconds\'"}},"orientation":{"type":{"name":"enum","description":"\'landscape\'<br>&#124;&nbsp;\'portrait\'"}},"readOnly":{"type":{"name":"bool"},"default":"false"},"reduceAnimations":{"type":{"name":"bool"},"default":"`@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13"},"referenceDate":{"type":{"name":"object"},"default":"The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`."},"selectedSections":{"type":{"name":"union","description":"\'all\'<br>&#124;&nbsp;\'day\'<br>&#124;&nbsp;\'empty\'<br>&#124;&nbsp;\'hours\'<br>&#124;&nbsp;\'meridiem\'<br>&#124;&nbsp;\'minutes\'<br>&#124;&nbsp;\'month\'<br>&#124;&nbsp;\'seconds\'<br>&#124;&nbsp;\'weekDay\'<br>&#124;&nbsp;\'year\'<br>&#124;&nbsp;number"}},"shouldDisableTime":{"type":{"name":"func"},"signature":{"type":"function(value: PickerValidDate, view: TimeView) => boolean","describedArgs":["value","view"],"returned":"boolean"}},"skipDisabled":{"type":{"name":"bool"},"default":"false"},"slotProps":{"type":{"name":"object"},"default":"{}"},"slots":{"type":{"name":"object"},"default":"{}","additionalInfo":{"slotsApi":true}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"thresholdToRenderTimeInASingleColumn":{"type":{"name":"number"},"default":"24"},"timeSteps":{"type":{"name":"shape","description":"{ hours?: number, minutes?: number, seconds?: number }"},"default":"{ hours: 1, minutes: 5, seconds: 5 }"},"timezone":{"type":{"name":"string"},"default":"The timezone of the `value` or `defaultValue` prop is defined, \'default\' otherwise.","seeMoreLink":{"url":"https://mui.com/x/react-date-pickers/timezone/","text":"timezones documentation"}},"value":{"type":{"name":"object"}},"view":{"type":{"name":"enum","description":"\'hours\'<br>&#124;&nbsp;\'meridiem\'<br>&#124;&nbsp;\'minutes\'<br>&#124;&nbsp;\'seconds\'"}},"viewRenderers":{"type":{"name":"shape","description":"{ hours?: func, meridiem?: func, minutes?: func, seconds?: func }"}},"views":{"type":{"name":"arrayOf","description":"Array&lt;\'hours\'<br>&#124;&nbsp;\'minutes\'<br>&#124;&nbsp;\'seconds\'&gt;"}}},"name":"TimePicker","imports":["import { TimePicker } from \'@mui/x-date-pickers/TimePicker\';","import { TimePicker } from \'@mui/x-date-pickers\';","import { TimePicker } from \'@mui/x-date-pickers-pro\';"],"slots":[{"name":"actionBar","description":"Custom component for the action bar, it is placed below the Picker views.","default":"PickersActionBar","class":null},{"name":"clearButton","description":"Button to clear the value.","default":"IconButton","class":null},{"name":"clearIcon","description":"Icon to display in the button used to clean the value.","default":"ClearIcon","class":null},{"name":"desktopPaper","description":"Custom component for the paper rendered inside the desktop picker\'s Popper.","default":"PickerPopperPaper","class":null},{"name":"desktopTransition","description":"Custom component for the desktop popper [Transition](https://mui.com/material-ui/transitions/).","default":"Grow or Fade from \'@mui/material\' when `reduceAnimations` is `true`.","class":null},{"name":"desktopTrapFocus","description":"Custom component for trapping the focus inside the views on desktop.","default":"TrapFocus from \'@mui/material\'.","class":null},{"name":"dialog","description":"Custom component for the dialog inside which the views are rendered on mobile.","default":"PickersModalDialogRoot","class":null},{"name":"digitalClockItem","description":"Component responsible for rendering a single digital clock item.","default":"MenuItem from \'@mui/material\'","class":null},{"name":"digitalClockSectionItem","description":"Component responsible for rendering a single multi section digital clock section item.","default":"MenuItem from \'@mui/material\'","class":null},{"name":"field","description":"Component used to enter the date with the keyboard.","class":null},{"name":"inputAdornment","description":"Component displayed on the start or end input adornment used to open the Picker.","default":"InputAdornment","class":null},{"name":"layout","description":"Custom component for wrapping the layout.\\nIt wraps the toolbar, views, action bar, and shortcuts.","class":null},{"name":"leftArrowIcon","description":"Icon displayed in the left view switch button.","default":"ArrowLeft","class":null},{"name":"mobilePaper","description":"Custom component for the paper rendered inside the mobile picker\'s Dialog.","default":"Paper from \'@mui/material\'.","class":null},{"name":"mobileTransition","description":"Custom component for the mobile dialog [Transition](https://mui.com/material-ui/transitions/).","default":"Fade from \'@mui/material\'.","class":null},{"name":"nextIconButton","description":"Button allowing to switch to the right view.","default":"IconButton","class":null},{"name":"openPickerButton","description":"Button to open the Picker.","default":"IconButton","class":null},{"name":"openPickerIcon","description":"Icon to display in the button used to open the Picker.","class":null},{"name":"popper","description":"Custom component for the popper inside which the views are rendered on desktop.","default":"Popper from \'@mui/material\'.","class":null},{"name":"previousIconButton","description":"Button allowing to switch to the left view.","default":"IconButton","class":null},{"name":"rightArrowIcon","description":"Icon displayed in the right view switch button.","default":"ArrowRight","class":null},{"name":"shortcuts","description":"Custom component for the shortcuts.","default":"PickersShortcuts","class":null},{"name":"textField","description":"Form control with an input to render the value.","default":"<PickersTextField />, or <TextField /> from \'@mui/material\' if `enableAccessibleFieldDOMStructure` is `false`.","class":null},{"name":"toolbar","description":"Custom component for the toolbar rendered above the views.","default":"TimePickerToolbar","class":null}],"classes":[],"spread":true,"themeDefaultProps":null,"muiName":"MuiTimePicker","filename":"/packages/x-date-pickers/src/TimePicker/TimePicker.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/x/react-date-pickers/time-picker/\\">Time Picker</a></li>\\n<li><a href=\\"/x/react-date-pickers/validation/\\">Date and Time Pickers - Validation</a></li></ul>","cssComponent":false}');var a=o(27707);function s(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.A,{descriptions:t,pageContent:o})}s.getInitialProps=function(){var e=o(22280);return{descriptions:(0,i.A)(e),pageContent:r}}}},e=>{e.O(0,[46593,67658,74273,14637,90636,38792],()=>e(e.s=94976)),_N_E=e.O()}]);